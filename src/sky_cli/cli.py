import platform
import subprocess
import sys
from pathlib import Path

import click

POWERSHELL_SCRIPT_CONTENT = r"""
# =======================================================
# ==     NoneBot Guardian & Restarter for Windows      ==
# ==     (Generated by nonebot-plugin-sky)             ==
# =======================================================

$ScriptRoot = Split-Path -Parent $MyInvocation.MyCommand.Definition
Set-Location -Path $ScriptRoot

$VenvPythonPath = Join-Path $ScriptRoot ".venv\Scripts\python.exe"

if (-not (Test-Path $VenvPythonPath)) {
    Write-Host "Error: Python virtual environment not found at '$VenvPythonPath'" -ForegroundColor Red
    Read-Host "Press Enter to exit"
    exit 1
}

while ($true) {
    Write-Host ""
    Write-Host "($(Get-Date -Format 'HH:mm:ss')) Starting NoneBot process..."

    $process = Start-Process -FilePath $VenvPythonPath -ArgumentList "-m", "nb_cli", "run" -NoNewWindow -Wait -PassThru
    
    $ExitCode = $process.ExitCode

    # 当且仅当退出码为 0 时重启
    if ($ExitCode -eq 0) {
        Write-Host ""
        Write-Host "($(Get-Date -Format 'HH:mm:ss')) Process exited with code 0. Assuming restart request. Rebooting in 5 seconds..." -ForegroundColor Yellow
        Start-Sleep -Seconds 5
    } else {
        Write-Host ""
        Write-Host "($(Get-Date -Format 'HH:mm:ss')) NoneBot process was interrupted (code $ExitCode). Not restarting." -ForegroundColor Green
        break
    }
}

Write-Host ""
Read-Host "Script has finished. Press Enter to exit."
"""

BASH_SCRIPT_CONTENT = r"""
#!/bin/bash

# =======================================================
# ==      NoneBot Guardian & Restarter for Linux/macOS    ==
# ==      (Generated by nonebot-plugin-sky)              ==
# =======================================================

cd "$(dirname "$0")"

VENV_PYTHON="./.venv/bin/python"

if [ ! -f "$VENV_PYTHON" ]; then
    echo "Error: Python virtual environment not found at '$VENV_PYTHON'" >&2
    exit 1
fi

while true; do
    echo ""
    echo "[$(date +'%H:%M:%S')] Starting NoneBot process..."
    
    "$VENV_PYTHON" -m nb_cli run
    
    EXIT_CODE=$?
    
    # 退出码为 130 (SIGINT) 时不重启
    if [ $EXIT_CODE -eq 130 ]; then
        echo ""
        echo "[$(date +'%H:%M:%S')] Process was interrupted by user (SIGINT / Ctrl+C). Not restarting."
        break
    else
        # 退出码为 0 或其他错误码，都进行重启
        echo ""
        echo "[$(date +'%H:%M:%S')] Process exited with code ($EXIT_CODE). Assuming restart request or crash. Rebooting in 5 seconds..."
        sleep 5
    fi
done

echo ""
echo "Script has finished."
"""

# ===================================================================
# ==                     创建新的 CLI 命令                         ==
# ===================================================================


@click.group(invoke_without_command=True)
@click.pass_context
def sky(ctx: click.Context):
    """
    nonebot-plugin-sky 的守护启动器和管理工具。
    直接运行 `sky` 将默认以守护模式启动 NoneBot。
    """
    if ctx.invoked_subcommand is None:
        ctx.invoke(run)

def _install_script():
    """
    为 nonebot-plugin-sky 安装或更新推荐的守护脚本。
    """
    is_windows = platform.system() == "Windows"
    script_name = "run.ps1" if is_windows else "run.sh"
    script_content = POWERSHELL_SCRIPT_CONTENT if is_windows else BASH_SCRIPT_CONTENT
    dest_path = Path.cwd() / script_name

    try:
        dest_path.write_text(script_content, encoding="utf-8")
        if not is_windows:
            dest_path.chmod(0o755)
        click.secho(
            f"守护脚本 '{script_name}'成功生成在项目根目录。",
            fg="green",
        )
    except Exception as e:
        click.secho(f"创建脚本时发生错误: {e}", fg="red")


@sky.command(name="run", help="使用守护脚本启动 NoneBot (如果脚本不存在则会自动创建)。")
@click.pass_context
def run(ctx: click.Context):
    """
    使用守护脚本启动 NoneBot
    如果守护脚本不存在则自动创建
    """
    is_windows = platform.system() == "Windows"
    script_name = "run.ps1" if is_windows else "run.sh"
    dest_path = Path.cwd() / script_name

    if not dest_path.exists():
        ctx.invoke(_install_script)
        if not dest_path.exists():
            click.secho("脚本创建失败，无法继续启动。", fg="red")
            sys.exit(1)
        click.echo("-" * 20)

    click.secho(f"正在通过 '{script_name}' 启动 NoneBot...", fg="cyan")

    try:
        if is_windows:
            subprocess.run(
                [
                    "powershell.exe",
                    "-ExecutionPolicy",
                    "Bypass",
                    "-File",
                    str(dest_path),
                ],
                check=True,
            )
        else:
            # 在 Linux/macOS 上，直接执行
            subprocess.run(["./" + script_name], check=True)
    except FileNotFoundError:
        click.secho(
            f"错误: 无法执行脚本。请确保您的系统中有 '{'powershell.exe' if is_windows else 'bash'}'。",
            fg="red",
        )
        sys.exit(1)
    except subprocess.CalledProcessError as e:
        click.secho(f"脚本已退出，退出码: {e.returncode}", fg="yellow")
    except Exception as e:
        click.secho(f"运行脚本时发生未知错误: {e}", fg="red")
